<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Walsvid&#39;s Blog</title>
  
  <subtitle>Time waits for no man.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://walsvid.github.io/"/>
  <updated>2018-07-08T08:20:54.685Z</updated>
  <id>http://walsvid.github.io/</id>
  
  <author>
    <name>Walsvid</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>TensorFlow variable_scope</title>
    <link href="http://walsvid.github.io/2018/03/15/tensorflow-variable-scope/"/>
    <id>http://walsvid.github.io/2018/03/15/tensorflow-variable-scope/</id>
    <published>2018-03-15T05:52:16.000Z</published>
    <updated>2018-07-08T08:20:54.685Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h3><p>在使用Tensorflow复现一些论文的结果的时候，使用tensorboard进行可视化的时候 会发现默认的tensorflow的行为是重新生成一个variable scope 而不是进入之前名字相同的<sup><a href="#fn_1" id="reffn_1">1</a></sup>，这样给控制计算图带来了很多不便，Github上面也很多人在讨论。好在，后序的版本中TensorFlow通过增加<code>variable_scope</code>的init参数修正了这个行为。<a id="more"></a></p><h3 id="Minimal-Reproducible-Example2"><a href="#Minimal-Reproducible-Example2" class="headerlink" title="Minimal Reproducible Example2"></a>Minimal Reproducible Example<sup><a href="#fn_2" id="reffn_2">2</a></sup></h3><p>同一<code>variable_scope</code>:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> tf.variable_scope(<span class="string">'layer123'</span>):</span><br><span class="line">    v = tf.get_variable(<span class="string">'v'</span>, [], initializer=tf.constant_initializer(<span class="number">42.</span>, tf.float32))</span><br><span class="line">    w = v * <span class="number">2</span></span><br><span class="line">print(w.name)    <span class="comment"># Prints 'layer123/mul:0'</span></span><br></pre></td></tr></table></figure><p>两个<code>variable_scope</code>:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> tf.variable_scope(<span class="string">'layer123'</span>):</span><br><span class="line">    v = tf.get_variable(<span class="string">'v'</span>, [], initializer=tf.constant_initializer(<span class="number">42.</span>, tf.float32))</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> tf.variable_scope(<span class="string">'layer123'</span>):</span><br><span class="line">    w = v * <span class="number">2</span></span><br><span class="line"></span><br><span class="line">print(w.name)    <span class="comment"># Prints 'layer123_1/mul:0'</span></span><br></pre></td></tr></table></figure><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><p>如果<code>tf.__version__ &lt; 1.5.0</code>,则可以用如下<code>trick</code>避免。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> tf.variable_scope(<span class="string">"sc_name"</span>, reuse=<span class="keyword">True</span>) <span class="keyword">as</span> scope:</span><br><span class="line">    <span class="keyword">with</span> tf.name_scope(scope.original_name_scope):</span><br><span class="line">        ...</span><br></pre></td></tr></table></figure></p><p>利用外层的<code>variable_scope</code>的原来的<code>original_name_scope</code>，以此作为之后的<code>name_scope</code>的名称。</p><p>如果<code>tf.__version__ &gt;= 1.5.0</code>，<br><code>variable_scope</code> 的<code>__init__</code>方法增加了参数 <code>auxiliary_name_scope</code><sup><a href="#fn_3" id="reffn_3">3</a></sup>，用于控制是否创建新的name scope。</p><blockquote id="fn_1"><sup>1</sup>. <a href="https://github.com/tensorflow/tensorflow/issues/13429" target="_blank" rel="noopener">https://github.com/tensorflow/tensorflow/issues/13429</a><a href="#reffn_1" title="Jump back to footnote [1] in the text."> &#8617;</a></blockquote><blockquote id="fn_2"><sup>2</sup>. <a href="https://github.com/tensorflow/tensorflow/issues/6189" target="_blank" rel="noopener">https://github.com/tensorflow/tensorflow/issues/6189</a><a href="#reffn_2" title="Jump back to footnote [2] in the text."> &#8617;</a></blockquote><blockquote id="fn_3"><sup>3</sup>. <a href="https://github.com/tensorflow/tensorflow/pull/14390" target="_blank" rel="noopener">https://github.com/tensorflow/tensorflow/pull/14390</a><a href="#reffn_3" title="Jump back to footnote [3] in the text."> &#8617;</a></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Problem&quot;&gt;&lt;a href=&quot;#Problem&quot; class=&quot;headerlink&quot; title=&quot;Problem&quot;&gt;&lt;/a&gt;Problem&lt;/h3&gt;&lt;p&gt;在使用Tensorflow复现一些论文的结果的时候，使用tensorboard进行可视化的时候 会发现默认的tensorflow的行为是重新生成一个variable scope 而不是进入之前名字相同的&lt;sup&gt;&lt;a href=&quot;#fn_1&quot; id=&quot;reffn_1&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;，这样给控制计算图带来了很多不便，Github上面也很多人在讨论。好在，后序的版本中TensorFlow通过增加&lt;code&gt;variable_scope&lt;/code&gt;的init参数修正了这个行为。
    
    </summary>
    
      <category term="Blog" scheme="http://walsvid.github.io/categories/Blog/"/>
    
    
      <category term="机器学习" scheme="http://walsvid.github.io/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>无穷序列对应函数的一种寻找方法</title>
    <link href="http://walsvid.github.io/2017/11/19/sequencetofunction/"/>
    <id>http://walsvid.github.io/2017/11/19/sequencetofunction/</id>
    <published>2017-11-19T11:32:01.000Z</published>
    <updated>2018-07-08T06:31:34.505Z</updated>
    
    <content type="html"><![CDATA[<p>问题的起源是知乎上有人提了一个问题<sup><a href="#fn_1" id="reffn_1">1</a></sup>「除了靠猜和不优雅的构造，如何函数化特殊数列？」题主提出的数列是：<code>1,1,1,0,-1,0,1,0,-1,0…</code><a id="more"></a>对于这个无穷的序列，插值的方法可以说不是非常有效，那么应该如何解决这个问题呢？</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>对于这一类问题其实有比较机械的解法：<br>首先把数列看做是对应生成函数<sup><a href="#fn_2" id="reffn_2">2</a></sup>（Generating function）的系数（coefficient），然后把生成函数看做是所求函数在频域上的表达式，转回实数域用逆Z变换就可以了。</p><h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><p>OK，有了思路之后看一下具体怎么做。数列是“1,1,1,0,-1,0,1,0,-1,0…”，看一下后面循环的部分是-1,0,1,0,-1,…这种循环，那么是对应哪个函数的展开呢？用OEIS查一下，得到<code>A056594</code><sup><a href="#fn_3" id="reffn_3">3</a></sup>：Periodic sequence 1,0,-1,0…;expansion of <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mn>1</mn></mrow><mrow><mn>1</mn><mo>+</mo><msup><mi>x</mi><mn>2</mn></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{1}{1+x^2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.845108em;"></span><span class="strut bottom" style="height:1.2484389999999999em;vertical-align:-0.403331em;"></span><span class="base textstyle uncramped"><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">1</span><span class="mbin">+</span><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:-0.289em;margin-right:0.07142857142857144em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-scriptstyle scriptscriptstyle cramped"><span class="mord mathrm">2</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span></span></span></span></p><figure class="highlight mma"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CoefficientList</span>[<span class="keyword">Series</span>[(<span class="number">1</span> + x^<span class="number">2</span>)^(<span class="number">-1</span>), &#123;x, 0, 12&#125;], x]</span><br></pre></td></tr></table></figure><p>得到的系数的Array如下：<br><figure class="highlight mma"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;1, 0, -1, 0, 1, 0, -1, 0, 1, 0, -1, 0, 1&#125;</span><br></pre></td></tr></table></figure></p><p>当然，正确的做法是用泰勒展开<sup><a href="#fn_4" id="reffn_4">4</a></sup></p><p>利用生成函数的相关的知识<sup><a href="#fn_5" id="reffn_5">5</a></sup>，和前两项拼一下:<br><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mrow><mi>g</mi></mrow><mo>(</mo><mi>z</mi><mo>)</mo><mo>=</mo><mn>2</mn><mo>+</mo><mi>z</mi><mo>−</mo><mfrac><mrow><mn>1</mn></mrow><mrow><mn>1</mn><mo>+</mo><msup><mi>z</mi><mn>2</mn></msup></mrow></mfrac><mo>=</mo><mfrac><mrow><msup><mi>z</mi><mn>3</mn></msup><mo>+</mo><mn>2</mn><msup><mi>z</mi><mn>2</mn></msup><mo>+</mo><mi>z</mi><mo>+</mo><mn>1</mn></mrow><mrow><msup><mi>z</mi><mn>2</mn></msup><mo>+</mo><mn>1</mn></mrow></mfrac></mrow><annotation encoding="application/x-tex">\mathcal{g}(z) = 2+z-\frac{1}{1+z^2}=\frac{z^3+2 z^2+z+1}{z^2+1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:1.491108em;"></span><span class="strut bottom" style="height:2.260438em;vertical-align:-0.7693300000000001em;"></span><span class="base displaystyle textstyle uncramped"><span class="mord displaystyle textstyle uncramped"><span class="mord mathit" style="margin-right:0.03588em;">g</span></span><span class="mopen">(</span><span class="mord mathit" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mrel">=</span><span class="mord mathrm">2</span><span class="mbin">+</span><span class="mord mathit" style="margin-right:0.04398em;">z</span><span class="mbin">−</span><span class="mord reset-textstyle displaystyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.686em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle cramped"><span class="mord textstyle cramped"><span class="mord mathrm">1</span><span class="mbin">+</span><span class="mord"><span class="mord mathit" style="margin-right:0.04398em;">z</span><span class="vlist"><span style="top:-0.289em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">2</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.677em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped"><span class="mord textstyle uncramped"><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span><span class="mrel">=</span><span class="mord reset-textstyle displaystyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.686em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle cramped"><span class="mord textstyle cramped"><span class="mord"><span class="mord mathit" style="margin-right:0.04398em;">z</span><span class="vlist"><span style="top:-0.289em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">2</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">+</span><span class="mord mathrm">1</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.677em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped"><span class="mord textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.04398em;">z</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathrm">3</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">+</span><span class="mord mathrm">2</span><span class="mord"><span class="mord mathit" style="margin-right:0.04398em;">z</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathrm">2</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">+</span><span class="mord mathit" style="margin-right:0.04398em;">z</span><span class="mbin">+</span><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span></span></span></span></span></p><p>由于生成函数和Z变换对应的变量的次数相差一个符号<sup><a href="#fn_6" id="reffn_6">6</a></sup>，我们还需要做一点变换，用$1/z$替换$z$</p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mrow><mi mathvariant="script">G</mi></mrow><mo>(</mo><mi>z</mi><mo>)</mo><mo>=</mo><mfrac><mrow><msup><mi>z</mi><mn>3</mn></msup><mo>+</mo><msup><mi>z</mi><mn>2</mn></msup><mo>+</mo><mn>2</mn><mi>z</mi><mo>+</mo><mn>1</mn></mrow><mrow><msup><mi>z</mi><mn>3</mn></msup><mo>+</mo><mi>z</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\mathcal{G}(z) = \frac{z^3+z^2+2 z+1}{z^3+z}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:1.491108em;"></span><span class="strut bottom" style="height:2.260438em;vertical-align:-0.7693300000000001em;"></span><span class="base displaystyle textstyle uncramped"><span class="mord displaystyle textstyle uncramped"><span class="mord mathcal" style="margin-right:0.0593em;">G</span></span><span class="mopen">(</span><span class="mord mathit" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mrel">=</span><span class="mord reset-textstyle displaystyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.686em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle cramped"><span class="mord textstyle cramped"><span class="mord"><span class="mord mathit" style="margin-right:0.04398em;">z</span><span class="vlist"><span style="top:-0.289em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">3</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">+</span><span class="mord mathit" style="margin-right:0.04398em;">z</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.677em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped"><span class="mord textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.04398em;">z</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathrm">3</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">+</span><span class="mord"><span class="mord mathit" style="margin-right:0.04398em;">z</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathrm">2</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">+</span><span class="mord mathrm">2</span><span class="mord mathit" style="margin-right:0.04398em;">z</span><span class="mbin">+</span><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span></span></span></span></span><p>用逆Z变换得到的待求函数：<br><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mrow><mi mathvariant="script">F</mi></mrow><mo>(</mo><mi>n</mi><mo>)</mo><mo>=</mo><mn>1</mn><mo>−</mo><mi>θ</mi><mo>(</mo><mi>n</mi><mo>−</mo><mn>2</mn><mo>)</mo><mrow><mo fence="true">(</mo><mn>1</mn><mo>+</mo><mi>cos</mi><mrow><mo fence="true">(</mo><mfrac><mrow><mi>π</mi><mi>n</mi></mrow><mrow><mn>2</mn></mrow></mfrac><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\mathcal{F}(n)=1-\theta (n-2)\left(1+\cos \left(\frac{\pi  n}{2}\right)\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:1.15em;"></span><span class="strut bottom" style="height:1.8359999999999999em;vertical-align:-0.686em;"></span><span class="base displaystyle textstyle uncramped"><span class="mord displaystyle textstyle uncramped"><span class="mord mathcal" style="margin-right:0.09931em;">F</span></span><span class="mopen">(</span><span class="mord mathit">n</span><span class="mclose">)</span><span class="mrel">=</span><span class="mord mathrm">1</span><span class="mbin">−</span><span class="mord mathit" style="margin-right:0.02778em;">θ</span><span class="mopen">(</span><span class="mord mathit">n</span><span class="mbin">−</span><span class="mord mathrm">2</span><span class="mclose">)</span><span class="minner displaystyle textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord mathrm">1</span><span class="mbin">+</span><span class="mop">cos</span><span class="minner displaystyle textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord reset-textstyle displaystyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.686em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle cramped"><span class="mord textstyle cramped"><span class="mord mathrm">2</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.677em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped"><span class="mord textstyle uncramped"><span class="mord mathit" style="margin-right:0.03588em;">π</span><span class="mord mathit">n</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size2">)</span></span></span></span></span></span></span></p><p>这里的θ(x)具体解释为Heaviside step function<sup><a href="#fn_7" id="reffn_7">7</a></sup>，Mathematica里面的<code>UnitStep</code>和<code>Heaviside</code>有少许区别<sup><a href="#fn_8" id="reffn_8">8</a></sup>，有时也写作H(x)或者𝟙(x)，这个𝟙在YOLO的论文中<sup><a href="#fn_9" id="reffn_9">9</a></sup>也用到了，用于构造损失函数。</p><h2 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h2><p>当然，这个方法不仅仅可以构造这个序列对应的函数，我们自己编造一个数列： <code>1,1,1,2,1,0,-1,-2,-1,0,1,2,1,0,-1,-2,-1,0,1,2,1,0,-1,-2,-1</code>，用Mathematica编程来找到最后的函数。</p><figure class="highlight mma"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">seq = &#123;1,1,1,2,1,0,-1,-2,-1,0,1,2,1,0,-1,-2,-1,0,1,2,1,0,-1,-2,-1&#125;</span><br><span class="line">g[z_] = <span class="keyword">FindGeneratingFunction</span>[seq, z]</span><br><span class="line">G[z_] = <span class="keyword">Simplify</span>[ g[z] /. z -&gt; <span class="number">1</span>/z]</span><br><span class="line">f[n_] = <span class="keyword">ExpToTrig</span>[<span class="keyword">FullSimplify</span>[<span class="keyword">ExpToTrig</span>[<span class="keyword">InverseZTransform</span>[G[z], z, n]]]]</span><br></pre></td></tr></table></figure><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>g</mi><mo>(</mo><mi>z</mi><mo>)</mo><mo>=</mo><mfrac><mrow><msup><mi>z</mi><mn>5</mn></msup><mo>+</mo><mn>2</mn><msup><mi>z</mi><mn>4</mn></msup><mo>+</mo><mn>2</mn><msup><mi>z</mi><mn>3</mn></msup><mo>+</mo><msup><mi>z</mi><mn>2</mn></msup><mo>+</mo><mi>z</mi><mo>+</mo><mn>1</mn></mrow><mrow><msup><mi>z</mi><mn>4</mn></msup><mo>+</mo><mn>1</mn></mrow></mfrac></mrow><annotation encoding="application/x-tex">g(z)=\frac{z^5+2 z^4+2 z^3+z^2+z+1}{z^4+1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:1.491108em;"></span><span class="strut bottom" style="height:2.260438em;vertical-align:-0.7693300000000001em;"></span><span class="base displaystyle textstyle uncramped"><span class="mord mathit" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathit" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mrel">=</span><span class="mord reset-textstyle displaystyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.686em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle cramped"><span class="mord textstyle cramped"><span class="mord"><span class="mord mathit" style="margin-right:0.04398em;">z</span><span class="vlist"><span style="top:-0.289em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">4</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">+</span><span class="mord mathrm">1</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.677em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped"><span class="mord textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.04398em;">z</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathrm">5</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">+</span><span class="mord mathrm">2</span><span class="mord"><span class="mord mathit" style="margin-right:0.04398em;">z</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathrm">4</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">+</span><span class="mord mathrm">2</span><span class="mord"><span class="mord mathit" style="margin-right:0.04398em;">z</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathrm">3</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">+</span><span class="mord"><span class="mord mathit" style="margin-right:0.04398em;">z</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathrm">2</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">+</span><span class="mord mathit" style="margin-right:0.04398em;">z</span><span class="mbin">+</span><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span></span></span></span></span><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mo>(</mo><mi>z</mi><mo>)</mo><mo>=</mo><mfrac><mrow><msup><mi>z</mi><mn>5</mn></msup><mo>+</mo><msup><mi>z</mi><mn>4</mn></msup><mo>+</mo><msup><mi>z</mi><mn>3</mn></msup><mo>+</mo><mn>2</mn><msup><mi>z</mi><mn>2</mn></msup><mo>+</mo><mn>2</mn><mi>z</mi><mo>+</mo><mn>1</mn></mrow><mrow><msup><mi>z</mi><mn>5</mn></msup><mo>+</mo><mi>z</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">G(z)=\frac{z^5+z^4+z^3+2 z^2+2 z+1}{z^5+z}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:1.491108em;"></span><span class="strut bottom" style="height:2.260438em;vertical-align:-0.7693300000000001em;"></span><span class="base displaystyle textstyle uncramped"><span class="mord mathit">G</span><span class="mopen">(</span><span class="mord mathit" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mrel">=</span><span class="mord reset-textstyle displaystyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.686em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle cramped"><span class="mord textstyle cramped"><span class="mord"><span class="mord mathit" style="margin-right:0.04398em;">z</span><span class="vlist"><span style="top:-0.289em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">5</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">+</span><span class="mord mathit" style="margin-right:0.04398em;">z</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.677em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped"><span class="mord textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.04398em;">z</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathrm">5</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">+</span><span class="mord"><span class="mord mathit" style="margin-right:0.04398em;">z</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathrm">4</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">+</span><span class="mord"><span class="mord mathit" style="margin-right:0.04398em;">z</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathrm">3</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">+</span><span class="mord mathrm">2</span><span class="mord"><span class="mord mathit" style="margin-right:0.04398em;">z</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathrm">2</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">+</span><span class="mord mathrm">2</span><span class="mord mathit" style="margin-right:0.04398em;">z</span><span class="mbin">+</span><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span></span></span></span></span><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo>(</mo><mi>n</mi><mo>)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable><mtr><mtd><mrow><mn>1</mn></mrow></mtd><mtd><mrow><mtext><mtext> </mtext><mi mathvariant="normal">i</mi><mi mathvariant="normal">f</mi><mtext> </mtext></mtext><mi>n</mi><mo>&lt;</mo><mn>2</mn></mrow></mtd></mtr><mtr><mtd><mrow><mo>−</mo><msup><mi>e</mi><mrow><mi>i</mi><mi>π</mi><mi>n</mi></mrow></msup><mrow><mo fence="true">(</mo><mrow><mo fence="true">(</mo><msqrt><mrow><mn>2</mn></mrow></msqrt><mo>+</mo><mn>1</mn><mo fence="true">)</mo></mrow><mi>sin</mi><mrow><mo fence="true">(</mo><mfrac><mrow><mi>π</mi><mi>n</mi></mrow><mrow><mn>2</mn></mrow></mfrac><mo fence="true">)</mo></mrow><mo>+</mo><mn>1</mn><mo fence="true">)</mo></mrow><mrow><mo fence="true">(</mo><mi>cos</mi><mrow><mo fence="true">(</mo><mfrac><mrow><mi>π</mi><mi>n</mi></mrow><mrow><mn>4</mn></mrow></mfrac><mo fence="true">)</mo></mrow><mo>−</mo><mi>sin</mi><mrow><mo fence="true">(</mo><mfrac><mrow><mi>π</mi><mi>n</mi></mrow><mrow><mn>4</mn></mrow></mfrac><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow></mrow></mtd><mtd><mrow><mtext><mtext> </mtext><mi mathvariant="normal">e</mi><mi mathvariant="normal">l</mi><mi mathvariant="normal">s</mi><mi mathvariant="normal">e</mi><mtext> </mtext></mtext></mrow></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">f(n)=\begin{cases}1 &amp;  \text{ if } n&lt;2 \\-e^{i \pi  n} \left(\left(\sqrt{2}+1\right) \sin \left(\frac{\pi  n}{2}\right)+1\right) \left(\cos \left(\frac{\pi  n}{4}\right)-\sin \left(\frac{\pi  n}{4}\right)\right)  &amp; \text{ else }\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:1.888em;"></span><span class="strut bottom" style="height:3.276em;vertical-align:-1.388em;"></span><span class="base displaystyle textstyle uncramped"><span class="mord mathit" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathit">n</span><span class="mclose">)</span><span class="mrel">=</span><span class="minner displaystyle textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist"><span style="top:-0.8799999999999999em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:1em;">​</span></span><span class="mord displaystyle textstyle uncramped"><span class="mord mathrm">1</span></span></span><span style="top:0.7019999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:1em;">​</span></span><span class="mord displaystyle textstyle uncramped"><span class="mord">−</span><span class="mord"><span class="mord mathit">e</span><span class="vlist"><span style="top:-0.413em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit">i</span><span class="mord mathit" style="margin-right:0.03588em;">π</span><span class="mord mathit">n</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="minner displaystyle textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="minner displaystyle textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="sqrt mord"><span class="sqrt-sign" style="top:-0.11609500000000006em;"><span class="style-wrap reset-textstyle textstyle uncramped">√</span></span><span class="vlist"><span style="top:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:1em;">​</span></span><span class="mord displaystyle textstyle cramped"><span class="mord mathrm">2</span></span></span><span style="top:-0.8760950000000001em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:1em;">​</span></span><span class="reset-textstyle textstyle uncramped sqrt-line"></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:1em;">​</span></span>​</span></span></span><span class="mbin">+</span><span class="mord mathrm">1</span><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="mop">sin</span><span class="minner displaystyle textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord reset-textstyle displaystyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.686em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle cramped"><span class="mord textstyle cramped"><span class="mord mathrm">2</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.677em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped"><span class="mord textstyle uncramped"><span class="mord mathit" style="margin-right:0.03588em;">π</span><span class="mord mathit">n</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="mbin">+</span><span class="mord mathrm">1</span><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="minner displaystyle textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mop">cos</span><span class="minner displaystyle textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord reset-textstyle displaystyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.686em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle cramped"><span class="mord textstyle cramped"><span class="mord mathrm">4</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.677em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped"><span class="mord textstyle uncramped"><span class="mord mathit" style="margin-right:0.03588em;">π</span><span class="mord mathit">n</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="mbin">−</span><span class="mop">sin</span><span class="minner displaystyle textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord reset-textstyle displaystyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.686em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle cramped"><span class="mord textstyle cramped"><span class="mord mathrm">4</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.677em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped"><span class="mord textstyle uncramped"><span class="mord mathit" style="margin-right:0.03588em;">π</span><span class="mord mathit">n</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size2">)</span></span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:1em;">​</span></span>​</span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist"><span style="top:-0.8799999999999999em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="mord displaystyle textstyle uncramped"><span class="text mord displaystyle textstyle uncramped"><span class="mord mspace"> </span><span class="mord mathrm">i</span><span class="mord mathrm" style="margin-right:0.07778em;">f</span><span class="mord mspace"> </span></span><span class="mord mathit">n</span><span class="mrel">&lt;</span><span class="mord mathrm">2</span></span></span><span style="top:0.7019999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="mord displaystyle textstyle uncramped"><span class="text mord displaystyle textstyle uncramped"><span class="mord mspace"> </span><span class="mord mathrm">e</span><span class="mord mathrm">l</span><span class="mord mathrm">s</span><span class="mord mathrm">e</span><span class="mord mspace"> </span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span></span></span></span></span><p>这个函数是复函数，下面是一些可视化</p><figure class="highlight mma"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DiscretePlot</span>[f[n], &#123;n, 0, 20&#125;]</span><br><span class="line"><span class="keyword">ParametricPlot</span>[&#123;Re[f[x]], Im[f[x]]&#125;, &#123;x, 0, 4 Pi&#125;]</span><br><span class="line"><span class="keyword">Plot</span>[&#123;Re[f[x]], Im[f[x]]&#125;, &#123;x, 0, 20&#125;, <span class="keyword">PlotRange</span> -&gt; <span class="keyword">All</span>, <span class="keyword">PlotLegends</span> -&gt; &#123;"Re f(x)", "Im f(x)"&#125;]</span><br><span class="line">rfPoints = <span class="keyword">Table</span>[&#123;x, Re[f[x]], Im[f[x]]&#125;, &#123;x, 0, 20&#125;]</span><br><span class="line"><span class="keyword">Show</span>[</span><br><span class="line"> <span class="keyword">ParametricPlot3D</span>[&#123;x, Re[f[x]], Im[f[x]]&#125;, &#123;x, 0, 20&#125;,</span><br><span class="line">  <span class="keyword">PlotRange</span> -&gt; <span class="keyword">All</span>, <span class="keyword">ViewVertical</span> -&gt; &#123;0, 1, 0&#125;, <span class="keyword">BoxRatios</span> -&gt; &#123;2, 1, 1&#125;,</span><br><span class="line">   <span class="keyword">ViewPoint</span> -&gt; &#123;2, 2, 10&#125;],</span><br><span class="line"> <span class="keyword">Graphics3D</span>[&#123;PointSize[0.01], Red, Point[rfPoints]&#125;],</span><br><span class="line"> <span class="keyword">ImageSize</span> -&gt; <span class="keyword">Large</span></span><br><span class="line"> ]</span><br></pre></td></tr></table></figure><p>函数的离散值（只对应整数点）：<br><img src="/2017/11/19/sequencetofunction/1.png" title="离散函数值"><br>函数在复平面的取值图像：<br><img src="/2017/11/19/sequencetofunction/2.png" title="函数在复平面的取值"><br>分别绘制出函数的实部和虚部的图像：<br><img src="/2017/11/19/sequencetofunction/3.png" title="函数的取值分实部和虚部"><br>函数在复空间的取值，红色的点是整数点，对应第一张离散值的图：<br><img src="/2017/11/19/sequencetofunction/4.png" title="函数在复空间的取值"></p><blockquote id="fn_1"><sup>1</sup>. <a href="https://www.zhihu.com/question/55950733" target="_blank" rel="noopener">https://www.zhihu.com/question/55950733</a><a href="#reffn_1" title="Jump back to footnote [1] in the text."> &#8617;</a></blockquote><blockquote id="fn_2"><sup>2</sup>. <a href="https://en.wikipedia.org/wiki/Generating_function" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Generating_function</a><a href="#reffn_2" title="Jump back to footnote [2] in the text."> &#8617;</a></blockquote><blockquote id="fn_3"><sup>3</sup>. <a href="https://oeis.org/search?q=1%2C0%2C-1%2C0%2C1%2C0%2C-1%2C0%2C1" target="_blank" rel="noopener">https://oeis.org/search?q=1%2C0%2C-1%2C0%2C1%2C0%2C-1%2C0%2C1</a><a href="#reffn_3" title="Jump back to footnote [3] in the text."> &#8617;</a></blockquote><blockquote id="fn_4"><sup>4</sup>. <a href="https://en.wikipedia.org/wiki/Taylor_series" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Taylor_series</a><a href="#reffn_4" title="Jump back to footnote [4] in the text."> &#8617;</a></blockquote><blockquote id="fn_5"><sup>5</sup>. <a href="https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-042j-mathematics-for-computer-science-fall-2005/readings/ln11.pdf" target="_blank" rel="noopener">https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-042j-mathematics-for-computer-science-fall-2005/readings/ln11.pdf</a><a href="#reffn_5" title="Jump back to footnote [5] in the text."> &#8617;</a></blockquote><blockquote id="fn_6"><sup>6</sup>. <a href="https://math.stackexchange.com/questions/137178/why-do-engineers-use-the-z-transform-and-mathematicians-use-generating-functions" target="_blank" rel="noopener">https://math.stackexchange.com/questions/137178/why-do-engineers-use-the-z-transform-and-mathematicians-use-generating-functions</a><a href="#reffn_6" title="Jump back to footnote [6] in the text."> &#8617;</a></blockquote><blockquote id="fn_7"><sup>7</sup>. <a href="https://en.wikipedia.org/wiki/Heaviside_step_function" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Heaviside_step_function</a><a href="#reffn_7" title="Jump back to footnote [7] in the text."> &#8617;</a></blockquote><blockquote id="fn_8"><sup>8</sup>. <a href="http://reference.wolfram.com/search/?q=Heaviside" target="_blank" rel="noopener">http://reference.wolfram.com/search/?q=Heaviside</a><a href="#reffn_8" title="Jump back to footnote [8] in the text."> &#8617;</a></blockquote><blockquote id="fn_9"><sup>9</sup>. <a href="https://arxiv.org/abs/1506.02640" target="_blank" rel="noopener">https://arxiv.org/abs/1506.02640</a><a href="#reffn_9" title="Jump back to footnote [9] in the text."> &#8617;</a></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;问题的起源是知乎上有人提了一个问题&lt;sup&gt;&lt;a href=&quot;#fn_1&quot; id=&quot;reffn_1&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;「除了靠猜和不优雅的构造，如何函数化特殊数列？」题主提出的数列是：&lt;code&gt;1,1,1,0,-1,0,1,0,-1,0…&lt;/code&gt;
    
    </summary>
    
      <category term="Blog" scheme="http://walsvid.github.io/categories/Blog/"/>
    
    
      <category term="数学" scheme="http://walsvid.github.io/tags/%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>对Tensorflow进行性能剖析</title>
    <link href="http://walsvid.github.io/2017/03/25/profiletensorflow/"/>
    <id>http://walsvid.github.io/2017/03/25/profiletensorflow/</id>
    <published>2017-03-25T13:25:04.000Z</published>
    <updated>2018-03-15T05:53:24.063Z</updated>
    
    <content type="html"><![CDATA[<p>本文翻译自<code>Illarion Khlestov</code>的博文：原文链接<sup><a href="#fn_1" id="reffn_1">1</a></sup><br>如今TensorFlow是最常用的机器学习库之一。有的时候，对Tensorflow进行性能剖析是十分有用的，通过性能剖析可以了解什么操作更花费时间。这可以用tensorflow timeline模块完成。不幸的是，我找不到任何明确的教程如何使用它。<a id="more"></a>所以在这篇博文中，我将尝试解决这个问题，包括以下主题：</p><ul><li>如何执行Tensorflow代码的分析</li><li>如何从多个session运行中合并时间轴</li><li>在分析过程中可能会出现什么问题以及如何解决问题</li></ul><h2 id="简单的例子"><a href="#简单的例子" class="headerlink" title="简单的例子"></a>简单的例子</h2><p>首先我们来定义一个简单的例子，下面是StackOverflow的答案<sup><a href="#fn_2" id="reffn_2">2</a></sup>：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"><span class="keyword">from</span> tensorflow.python.client <span class="keyword">import</span> timeline</span><br><span class="line"></span><br><span class="line">a = tf.random_normal([<span class="number">2000</span>, <span class="number">5000</span>])</span><br><span class="line">b = tf.random_normal([<span class="number">5000</span>, <span class="number">1000</span>])</span><br><span class="line">res = tf.matmul(a, b)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> tf.Session() <span class="keyword">as</span> sess:</span><br><span class="line">    <span class="comment"># add additional options to trace the session execution</span></span><br><span class="line">    options = tf.RunOptions(trace_level=tf.RunOptions.FULL_TRACE)</span><br><span class="line">    run_metadata = tf.RunMetadata()</span><br><span class="line">    sess.run(res, options=options, run_metadata=run_metadata)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Create the Timeline object, and write it to a json file</span></span><br><span class="line">    fetched_timeline = timeline.Timeline(run_metadata.step_stats)</span><br><span class="line">    chrome_trace = fetched_timeline.generate_chrome_trace_format()</span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">'timeline_01.json'</span>, <span class="string">'w'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(chrome_trace)</span><br></pre></td></tr></table></figure></p><p>应该注意到给<code>session</code>运行时添加的额外的<code>options</code>和<code>run_metadata</code>，这个脚本应该在<code>CPU</code>和<code>GPU</code>上运行，在执行之后我们会获得<code>timeline_01.json</code>和性能剖析的数据，这些都以Chrome的trace文件形式存储。如果你运行脚本失败了，尝试<strong>Issues during profiling</strong>这一节的第一个解决方案。</p><p>要查看存储的数据，我们应该使用Chrome浏览器（不幸的是据我所知，只有它支持自己的跟踪格式）。转到<code>chrome://</code>跟踪页面。在左上角，您会看到加载按钮。按下它并加载我们的JSON文件。</p><img src="/2017/03/25/profiletensorflow/1.png" title="Example profiling of our simple script on CPU."><p>在顶部您将看到以ms为单位的时间轴。要获得有关操作的更准确的信息，只需点击它。还有在右侧有简单的工具：选择，平移，缩放和时间。</p><h2 id="比较复杂的例子"><a href="#比较复杂的例子" class="headerlink" title="比较复杂的例子"></a>比较复杂的例子</h2><p>现在让我们用一些占位符和优化器来定义更复杂的例子：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> tempfile</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"><span class="keyword">from</span> tensorflow.contrib.layers <span class="keyword">import</span> fully_connected <span class="keyword">as</span> fc</span><br><span class="line"><span class="keyword">from</span> tensorflow.examples.tutorials.mnist <span class="keyword">import</span> input_data</span><br><span class="line"><span class="keyword">from</span> tensorflow.python.client <span class="keyword">import</span> timeline</span><br><span class="line"></span><br><span class="line">batch_size = <span class="number">100</span></span><br><span class="line"></span><br><span class="line">inputs = tf.placeholder(tf.float32, [batch_size, <span class="number">784</span>])</span><br><span class="line">targets = tf.placeholder(tf.float32, [batch_size, <span class="number">10</span>])</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> tf.variable_scope(<span class="string">"layer_1"</span>):</span><br><span class="line">    fc_1_out = fc(inputs, num_outputs=<span class="number">500</span>, activation_fn=tf.nn.sigmoid)</span><br><span class="line"><span class="keyword">with</span> tf.variable_scope(<span class="string">"layer_2"</span>):</span><br><span class="line">    fc_2_out = fc(fc_1_out, num_outputs=<span class="number">784</span>, activation_fn=tf.nn.sigmoid)</span><br><span class="line"><span class="keyword">with</span> tf.variable_scope(<span class="string">"layer_3"</span>):</span><br><span class="line">    logits = fc(fc_2_out, num_outputs=<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">loss = tf.reduce_mean(</span><br><span class="line">    tf.nn.softmax_cross_entropy_with_logits(logits=logits, labels=targets))</span><br><span class="line">train_op = tf.train.GradientDescentOptimizer(<span class="number">0.01</span>).minimize(loss)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    mnist_save_dir = os.path.join(tempfile.gettempdir(), <span class="string">'MNIST_data'</span>)</span><br><span class="line">    mnist = input_data.read_data_sets(mnist_save_dir, one_hot=<span class="keyword">True</span>)</span><br><span class="line"></span><br><span class="line">    config = tf.ConfigProto()</span><br><span class="line">    config.gpu_options.allow_growth = <span class="keyword">True</span></span><br><span class="line">    <span class="keyword">with</span> tf.Session(config=config) <span class="keyword">as</span> sess:</span><br><span class="line">        sess.run(tf.global_variables_initializer())</span><br><span class="line"></span><br><span class="line">        options = tf.RunOptions(trace_level=tf.RunOptions.FULL_TRACE)</span><br><span class="line">        run_metadata = tf.RunMetadata()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">3</span>):</span><br><span class="line">            batch_input, batch_target = mnist.train.next_batch(batch_size)</span><br><span class="line">            feed_dict = &#123;inputs: batch_input,</span><br><span class="line">                         targets: batch_target&#125;</span><br><span class="line"></span><br><span class="line">            sess.run(train_op,</span><br><span class="line">                     feed_dict=feed_dict,</span><br><span class="line">                     options=options,</span><br><span class="line">                     run_metadata=run_metadata)</span><br><span class="line"></span><br><span class="line">            fetched_timeline = timeline.Timeline(run_metadata.step_stats)</span><br><span class="line">            chrome_trace = fetched_timeline.generate_chrome_trace_format()</span><br><span class="line">            <span class="keyword">with</span> open(<span class="string">'timeline_02_step_%d.json'</span> % i, <span class="string">'w'</span>) <span class="keyword">as</span> f:</span><br><span class="line">                f.write(chrome_trace)</span><br></pre></td></tr></table></figure></p><p>现在我们的操作存储在变量范围之下。 使用这种方法，操作名称将以范围名称开始，并在时间轴上明确区分。<br>另外，代码存储三次运行跟踪的结果。 如果我们在CPU上执行脚本，我们会收到三个相对类似的时间表，如下所示：<br><img src="/2017/03/25/profiletensorflow/2.png" title="Profiling second script on CPU."><br>但是，如果我们检查GPU分析的结果，第一次的结果将与接下来的不同：</p><img src="/2017/03/25/profiletensorflow/3.png" title="Profiling second script on GPU, 1-st run."><img src="/2017/03/25/profiletensorflow/4.png" title="Profiling second script on GPU, 1-st run."><p>你可能会注意到，第一次运行GPU比以前要花费更多的时间。这是因为在第一次运行的tensorflow执行一些GPU初始化例程，后来将被优化。如果想要得到更精确的结果，尝试先执行多次再进行分析。<br>此外，所有传入/输出流都以可变范围名称开始，我们确切知道源代码中存在一个或另一个操作。</p><h3 id="将多次运行的时间轴存储在一个文件中"><a href="#将多次运行的时间轴存储在一个文件中" class="headerlink" title="将多次运行的时间轴存储在一个文件中"></a>将多次运行的时间轴存储在一个文件中</h3><p>如果我们想在某个文件中存储多个会话运行怎么办？不幸的是，这只能手动完成。Chrome跟踪格式内存有每个事件的存储定义，它的运行时间。在第一次迭代中，我们将存储所有数据，但在下一次运行时，我们将只更新运行时间，而不是定义本身。这里只是合并事件的类定义，以及您可以在这里找到的完整示例<sup><a href="#fn_3" id="reffn_3">3</a></sup>：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TimeLiner</span>:</span></span><br><span class="line">    _timeline_dict = <span class="keyword">None</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update_timeline</span><span class="params">(self, chrome_trace)</span>:</span></span><br><span class="line">        <span class="comment"># convert crome trace to python dict</span></span><br><span class="line">        chrome_trace_dict = json.loads(chrome_trace)</span><br><span class="line">        <span class="comment"># for first run store full trace</span></span><br><span class="line">        <span class="keyword">if</span> self._timeline_dict <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">            self._timeline_dict = chrome_trace_dict</span><br><span class="line">        <span class="comment"># for other - update only time consumption, not definitions</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">for</span> event <span class="keyword">in</span> chrome_trace_dict[<span class="string">'traceEvents'</span>]:</span><br><span class="line">                <span class="comment"># events time consumption started with 'ts' prefix</span></span><br><span class="line">                <span class="keyword">if</span> <span class="string">'ts'</span> <span class="keyword">in</span> event:</span><br><span class="line">                    self._timeline_dict[<span class="string">'traceEvents'</span>].append(event)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">save</span><span class="params">(self, f_name)</span>:</span></span><br><span class="line">        <span class="keyword">with</span> open(f_name, <span class="string">'w'</span>) <span class="keyword">as</span> f:</span><br><span class="line">            json.dump(self._timeline_dict, f)</span><br></pre></td></tr></table></figure></p><p>我们将得到非常棒的合并之后的时间轴：<br><img src="/2017/03/25/profiletensorflow/5.png" title="Merged profiling for 5 runs."><br>似乎初始化仍然需要很多时间，所以让我们放大到右边：<br><img src="/2017/03/25/profiletensorflow/6.png" title="Merged profiling for 5 runs zoomed."><br>现在我们可以看到一些重复的模式。 runs之间没有任何特定的分隔符，但是我们可以区分它们。</p><h2 id="分析时的问题"><a href="#分析时的问题" class="headerlink" title="分析时的问题"></a>分析时的问题</h2><p>在profiling期间可能存在一些麻烦。首先，它可能根本无法工作。如果你遇到这样的错误：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">I tensorflow/stream_executor/dso_loader.cc:126] Couldn&apos;t open CUDA library libcupti.so.8.0. LD_LIBRARY_PATH:</span><br></pre></td></tr></table></figure></p><p>并且你确保如果不进行性能分析，一切正常，那么可以根据Github的这个issue<sup><a href="#fn_4" id="reffn_4">4</a></sup>安装额外的库<code>libcupti-dev</code>，下面这条指令可以解决问题：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install libcupti-dev</span><br></pre></td></tr></table></figure><p>其次是运行中的延误。在最后的图像上，我们看到运行之间存在差距。对于大型网络，这可能需要非常大的时间。该错误无法完全解决，但可能会使用自定义C++<code>protobuf</code>库来减少延迟。在tensorflow文档中清楚地描述了如何执行安装。</p><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>我希望通过这样的分析，您将更深入地了解Tensorflow框架中的内容，以及计算图的哪些部分可能被优化。 含有CPU和GPU上已经生成的时间轴的所有代码示例都存储在此repo<sup><a href="#fn_5" id="reffn_5">5</a></sup>中。<br>谢谢阅读！</p><blockquote id="fn_1"><sup>1</sup>. <a href="https://medium.com/towards-data-science/howto-profile-tensorflow-1a49fb18073d#.93geshkgu" target="_blank" rel="noopener">https://medium.com/towards-data-science/howto-profile-tensorflow-1a49fb18073d#.93geshkgu</a><a href="#reffn_1" title="Jump back to footnote [1] in the text."> &#8617;</a></blockquote><blockquote id="fn_2"><sup>2</sup>. <a href="http://stackoverflow.com/questions/34293714/can-i-measure-the-execution-time-of-individual-operations-with-tensorflow/" target="_blank" rel="noopener">http://stackoverflow.com/questions/34293714/can-i-measure-the-execution-time-of-individual-operations-with-tensorflow/</a><a href="#reffn_2" title="Jump back to footnote [2] in the text."> &#8617;</a></blockquote><blockquote id="fn_3"><sup>3</sup>. <a href="https://github.com/ikhlestov/tensorflow_profiling/blob/master/03_merged_timeline_example.py" target="_blank" rel="noopener">https://github.com/ikhlestov/tensorflow_profiling/blob/master/03_merged_timeline_example.py</a><a href="#reffn_3" title="Jump back to footnote [3] in the text."> &#8617;</a></blockquote><blockquote id="fn_4"><sup>4</sup>. <a href="https://github.com/tensorflow/tensorflow/issues/5282" target="_blank" rel="noopener">https://github.com/tensorflow/tensorflow/issues/5282</a><a href="#reffn_4" title="Jump back to footnote [4] in the text."> &#8617;</a></blockquote><blockquote id="fn_5"><sup>5</sup>. <a href="https://github.com/ikhlestov/tensorflow_profiling" target="_blank" rel="noopener">https://github.com/ikhlestov/tensorflow_profiling</a><a href="#reffn_5" title="Jump back to footnote [5] in the text."> &#8617;</a></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文翻译自&lt;code&gt;Illarion Khlestov&lt;/code&gt;的博文：原文链接&lt;sup&gt;&lt;a href=&quot;#fn_1&quot; id=&quot;reffn_1&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;br&gt;如今TensorFlow是最常用的机器学习库之一。有的时候，对Tensorflow进行性能剖析是十分有用的，通过性能剖析可以了解什么操作更花费时间。这可以用tensorflow timeline模块完成。不幸的是，我找不到任何明确的教程如何使用它。
    
    </summary>
    
      <category term="Translation" scheme="http://walsvid.github.io/categories/Translation/"/>
    
    
      <category term="机器学习" scheme="http://walsvid.github.io/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Mac配置LaTeX和Emacs的编辑环境</title>
    <link href="http://walsvid.github.io/2016/05/14/latex-mac/"/>
    <id>http://walsvid.github.io/2016/05/14/latex-mac/</id>
    <published>2016-05-14T15:38:08.000Z</published>
    <updated>2018-03-15T05:53:04.272Z</updated>
    
    <content type="html"><![CDATA[<p>最近需要写一篇论文，手头的电脑是MacBook Pro，以往的时候一些简单的文章都是用Markdown或者Word进行的排版，这次准备正式一些，于是就准备用LaTeX。在使用LaTeX的时候，配置环境是必须要面对的问题。这篇文章旨在解决Mac下LaTeX的配置，并自由的使用中英文进行书写。<a id="more"></a></p><h2 id="LaTeX"><a href="#LaTeX" class="headerlink" title="LaTeX"></a>LaTeX</h2><h3 id="选择发行版"><a href="#选择发行版" class="headerlink" title="选择发行版"></a>选择发行版</h3><p>我们选择MacTeX作为安装的LaTeX版本。MacTeX提供了pkg的安装包，直接安装就可以。</p><blockquote><p><a href="https://tug.org/mactex/" target="_blank" rel="noopener">安装MacTex的地址</a></p></blockquote><p>如果习惯使用homebrew进行包管理，还可以用<code>homebrew</code>的<code>caskroom</code>来安装。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew cask info mactex</span><br></pre></td></tr></table></figure></p><p>MacTeX的安装十分简单，不需要额外的设置，等MacTeX安装完成就可以啦。</p><h3 id="OS-X-El-Captain-的额外设置"><a href="#OS-X-El-Captain-的额外设置" class="headerlink" title="OS X El Captain 的额外设置"></a>OS X El Captain 的额外设置</h3><p>由于OSX的新版本El Capitan有System Integrity Protection，<code>/usr</code>目录不能够写入，我们MacTeX的安装目录会自动更换为<code>/Library</code>，但是MacTeX自带的一些IDE，比如TeXShop的运行环境没有及时更换。还需要额外的一些设置。MacTeX的官网上有专门的文档进行说明。</p><blockquote><p><a href="https://tug.org/mactex/UpdatingForElCapitan.pdf" target="_blank" rel="noopener">El Capitan补充配置文档</a></p></blockquote><p>就是在偏好设置里将TeXShop的引擎重新设置路径就可以。<br><img src="/2016/05/14/latex-mac/texshop.png"></p><h2 id="Emacs的配置"><a href="#Emacs的配置" class="headerlink" title="Emacs的配置"></a>Emacs的配置</h2><p>虽然有TeXShop这种自带的IDE供我们使用，但是这些IDE不是十分好用，没有补全功能等等。日常的代码我就使用Emacs进行编辑，这次的LaTeX继续使用Emacs。</p><h3 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h3><p>在<code>PATH</code>环境变量中添加<code>/Library/TeX/texbin</code>这一个新的路径，保证Emacs可以找到TeX Engine，如果是早于 El Captain 的版本，相应的路径是<code>/usr/texbin</code></p><h3 id="Spacemacs"><a href="#Spacemacs" class="headerlink" title="Spacemacs"></a>Spacemacs</h3><p>我使用的是<code>spacemacs</code>这个配置文件，不仅仅因为这个配置文件的使用人数众多，而且社区驱动的话开发迭代也十分积极。使用<code>spacemacs</code>的话，只需要在<code>dotspacemacs-configuration-layers</code>添加<code>latex</code>的layer就可以了。这个layer已经集成了LaTeX的自动补全，代码高亮，编译，预览等一系列的操作，一站式服务，十分方便。安装完成后为了能未来支持中文，我们需要一些设置。添加到<code>dotspacemacs/user-config ()</code>里面。<br><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">;;LaTex</span></span><br><span class="line">(<span class="name">add-hook</span> 'LaTeX-mode-hook</span><br><span class="line">        (<span class="name">lambda</span> ()</span><br><span class="line">          (<span class="name">setq</span> TeX-auto-untabify <span class="literal">t</span>     <span class="comment">; remove all tabs before saving</span></span><br><span class="line">                TeX-engine 'xetex       <span class="comment">; use xelatex default</span></span><br><span class="line">                TeX-show-compilation <span class="literal">t</span>)  <span class="comment">; display compilation windows</span></span><br><span class="line">          (<span class="name">TeX-global-PDF-mode</span> <span class="literal">t</span>)       <span class="comment">; PDF mode enable, not plain</span></span><br><span class="line">          (<span class="name">setq</span> TeX-save-query <span class="literal">nil</span>)</span><br><span class="line">          (<span class="name">imenu-add-menubar-index</span>)</span><br><span class="line">          (<span class="name">define-key</span> LaTeX-mode-map (<span class="name">kbd</span> <span class="string">"TAB"</span>) 'TeX-complete-symbol)))</span><br></pre></td></tr></table></figure></p><h3 id="其他配置文件"><a href="#其他配置文件" class="headerlink" title="其他配置文件"></a>其他配置文件</h3><p>下个auctex的安装包</p><blockquote><p><a href="http://www.gnu.org/software/auctex/" target="_blank" rel="noopener">auctex安装包地址</a></p></blockquote><p>解压之后，进入相应的文件夹。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./configure --with-emacs=/Applications/Emacs.app/Contents/MacOS/Emacs --with-lispdir=/Applications/Emacs.app/Contents/Resources/site-lisp --with-texmf-dir=/usr/<span class="built_in">local</span>/texlive/texmf-local</span><br><span class="line">make</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure></p><p>这样就配置好的<code>auctex</code>的环境，接下来在<code>.emacs</code>中加入：<br><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name">setenv</span> <span class="string">"PATH"</span> (<span class="name">concat</span> <span class="string">"/usr/texbin:/usr/local/bin:"</span> (<span class="name">getenv</span> <span class="string">"PATH"</span>)))</span><br><span class="line">(<span class="name">setq</span> exec-path (<span class="name">append</span> '(<span class="string">"/usr/texbin"</span> <span class="string">"/usr/local/bin"</span>) exec-path))</span><br><span class="line">(<span class="name">load</span> <span class="string">"auctex.el"</span> <span class="literal">nil</span> <span class="literal">t</span> <span class="literal">t</span>)</span><br><span class="line">(<span class="name">load</span> <span class="string">"preview-latex.el"</span> <span class="literal">nil</span> <span class="literal">t</span> <span class="literal">t</span>)</span><br></pre></td></tr></table></figure></p><h2 id="中文"><a href="#中文" class="headerlink" title="中文"></a>中文</h2><h3 id="TeXShop"><a href="#TeXShop" class="headerlink" title="TeXShop"></a>TeXShop</h3><p>进入TeXShop -&gt; Preferences -&gt; Source，找到Encoding下拉菜单栏，将编码格式选为Unicode(UTF-8)<br>这种方式就是有良好的移植性，在多个文章中都可以写中文。</p><h3 id="文章中设置"><a href="#文章中设置" class="headerlink" title="文章中设置"></a>文章中设置</h3><p>XeLaTeX引擎可以很好的支持中文，将引擎设置为XeLaTeX，可以用以下的模板来写中文的LaTeX文章。<br><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%!TEX TS-program = xelatex</span></span><br><span class="line"><span class="comment">%!TEX encoding = UTF-8 Unicode</span></span><br><span class="line"><span class="tag">\<span class="name">documentclass</span><span class="string">[12pt]</span><span class="string">&#123;article&#125;</span></span></span><br><span class="line"><span class="tag">\<span class="name">usepackage</span><span class="string">&#123;geometry&#125;</span></span></span><br><span class="line"><span class="tag">\<span class="name">geometry</span><span class="string">&#123;letterpaper&#125;</span></span></span><br><span class="line"><span class="tag">\<span class="name">usepackage</span><span class="string">&#123;fontspec,xltxtra,xunicode&#125;</span></span></span><br><span class="line"><span class="tag">\<span class="name">defaultfontfeatures</span><span class="string">&#123;Mapping=tex-text&#125;</span></span></span><br><span class="line"><span class="tag">\<span class="name">setromanfont</span><span class="string">&#123;SimSun&#125;</span></span> <span class="comment">%设置中文字体</span></span><br><span class="line"><span class="tag">\<span class="name">XeTeXlinebreaklocale</span></span> "zh"</span><br><span class="line"><span class="tag">\<span class="name">XeTeXlinebreakskip</span> = <span class="number">0pt</span></span> plus 1pt minus 0.1pt <span class="comment">%文章内中文自动换行</span></span><br><span class="line"><span class="tag">\<span class="name">newfontfamily</span><span class="string">&#123;\H&#125;</span><span class="string">&#123;SimHei&#125;</span></span></span><br><span class="line"><span class="tag">\<span class="name">newfontfamily</span><span class="string">&#123;\E&#125;</span><span class="string">&#123;Arial&#125;</span></span>  <span class="comment">%设定新的字体快捷命令</span></span><br><span class="line"><span class="tag">\<span class="name">title</span><span class="string">&#123;\H 标题&#125;</span></span></span><br><span class="line"><span class="tag">\<span class="name">author</span><span class="string">&#123;Donald&#125;</span></span></span><br><span class="line"><span class="tag">\<span class="name">date</span><span class="string">&#123;\E\today&#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="tag">\<span class="name">begin</span><span class="string">&#123;document&#125;</span></span></span><br><span class="line"><span class="tag">\<span class="name">maketitle</span></span></span><br><span class="line">这个段落中，夹杂着一个&#123;<span class="tag">\<span class="name">E</span></span> word&#125;。</span><br><span class="line"><span class="tag">\<span class="name">end</span><span class="string">&#123;document&#125;</span></span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近需要写一篇论文，手头的电脑是MacBook Pro，以往的时候一些简单的文章都是用Markdown或者Word进行的排版，这次准备正式一些，于是就准备用LaTeX。在使用LaTeX的时候，配置环境是必须要面对的问题。这篇文章旨在解决Mac下LaTeX的配置，并自由的使用中英文进行书写。
    
    </summary>
    
      <category term="Tutorial" scheme="http://walsvid.github.io/categories/Tutorial/"/>
    
    
      <category term="LaTeX" scheme="http://walsvid.github.io/tags/LaTeX/"/>
    
      <category term="Mac" scheme="http://walsvid.github.io/tags/Mac/"/>
    
      <category term="Emacs" scheme="http://walsvid.github.io/tags/Emacs/"/>
    
  </entry>
  
  <entry>
    <title>不用特殊字符输出Helloworld</title>
    <link href="http://walsvid.github.io/2015/11/13/no-brackets-hw/"/>
    <id>http://walsvid.github.io/2015/11/13/no-brackets-hw/</id>
    <published>2015-11-13T11:11:10.000Z</published>
    <updated>2018-03-15T05:53:06.394Z</updated>
    
    <content type="html"><![CDATA[<p>最近，工程组的学长建议我们都去做一下凝聚的题目，开阔开阔眼界。虽然我对安全方向不是非常感冒，但是有一道汇编与底层相关的题目给我留下了很深的印象。<a id="more"></a></p><h2 id="0-不加限制的输出Hello-World"><a href="#0-不加限制的输出Hello-World" class="headerlink" title="0. 不加限制的输出Hello World!"></a>0. 不加限制的输出Hello World!</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Hello World!"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>或者用<code>puts</code><br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"Hello World!"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>没什么好说的，很容易就能写出来。</p><h2 id="1-不使用引号-‘’-“”-输出Hello-World"><a href="#1-不使用引号-‘’-“”-输出Hello-World" class="headerlink" title="1. 不使用引号(‘’ “”)输出Hello, World!"></a>1. 不使用引号(‘’ “”)输出Hello, World!</h2><p>这道题，想到的就是替换字符串的内容为ASCII码，还算简单.<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">char</span> hello[] = &#123;</span><br><span class="line">    <span class="number">0x48</span>, <span class="number">0x65</span>, <span class="number">0x6c</span>, <span class="number">0x6c</span>, <span class="number">0x6f</span>, <span class="number">0x2c</span>, <span class="number">0x20</span>,   <span class="comment">//Hello,.</span></span><br><span class="line">    <span class="number">0x57</span>, <span class="number">0x6f</span>, <span class="number">0x72</span>, <span class="number">0x6c</span>, <span class="number">0x64</span>, <span class="number">0x21</span>, <span class="number">0x00</span>    <span class="comment">//World!</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">puts</span>(hello);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="2-不使用分号-输出Hello-World"><a href="#2-不使用分号-输出Hello-World" class="headerlink" title="2. 不使用分号(;)输出Hello, World!"></a>2. 不使用分号(;)输出Hello, World!</h2><p>这个就更简单了，利用puts的返回值，将语句嵌套在if块中即可<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">puts</span>(<span class="string">"Hello, World!"</span>)) &#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="3-不使用井号-输出Hello-World"><a href="#3-不使用井号-输出Hello-World" class="headerlink" title="3. 不使用井号(#)输出Hello, World!"></a>3. 不使用井号(#)输出Hello, World!</h2><h3 id="使用三字符-Trigraphs"><a href="#使用三字符-Trigraphs" class="headerlink" title="使用三字符(Trigraphs)"></a>使用三字符(Trigraphs)</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">??=include &lt;stdio.h&gt;</span><br><span class="line"><span class="keyword">int</span> main()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"Hello, World!"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>gcc，clang都需要添加编译选项<code>-trigraphs</code></p><h3 id="使用双字符-Digraphs"><a href="#使用双字符-Digraphs" class="headerlink" title="使用双字符(Digraphs)"></a>使用双字符(Digraphs)</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">%:include &lt;stdio.h&gt;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"Hello, World!"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>根据GCC的手册，这个Digraph是90年提出的。<br>虽然不用添加编译选项，但是需要支持<code>-std=iso9899:199409</code>标准。</p><h3 id="使用GCC的builtin函数"><a href="#使用GCC的builtin函数" class="headerlink" title="使用GCC的builtin函数"></a>使用GCC的builtin函数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  __builtin_puts(<span class="string">"Hello, World!"</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="利用C语言运行时会查找这些函数的声明的特性直接自己声明"><a href="#利用C语言运行时会查找这些函数的声明的特性直接自己声明" class="headerlink" title="利用C语言运行时会查找这些函数的声明的特性直接自己声明"></a>利用C语言运行时会查找这些函数的声明的特性直接自己声明</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">extern int puts(const char *__s);</span><br><span class="line">int main() &#123;</span><br><span class="line">  puts(&quot;Hello, World!&quot;);</span><br><span class="line">  return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="内联汇编"><a href="#内联汇编" class="headerlink" title="内联汇编"></a>内联汇编</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> hello[] = <span class="string">"Hello, World!"</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">asm</span>(<span class="string">"movl   $hello, %edi"</span>);</span><br><span class="line">    <span class="keyword">asm</span>(<span class="string">"call   puts"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以直接call puts<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> hello[] = <span class="string">"Hello, World!"</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">asm</span>(<span class="string">"mov    $0x1, %rax"</span>);</span><br><span class="line">    <span class="keyword">asm</span>(<span class="string">"mov    $0x1, %rdi"</span>);</span><br><span class="line">    <span class="keyword">asm</span>(<span class="string">"mov    $hello,  %rsi"</span>);</span><br><span class="line">    <span class="keyword">asm</span>(<span class="string">"mov    $0xd, %rdx"</span>);</span><br><span class="line">    <span class="keyword">asm</span>(<span class="string">"syscall"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>可以用系统调用，1号系统调用就是<code>sys_write</code>，<code>sys_write</code>三个参数：写入的文件，字符串地址，字符串长度。</p><h2 id="4-不使用不可见字符输出Hello-World"><a href="#4-不使用不可见字符输出Hello-World" class="headerlink" title="4. 不使用不可见字符输出Hello, World!"></a>4. 不使用不可见字符输出Hello, World!</h2><p>这题的思路在SQL注入中经常用到，就是用多行注释来替代空格分隔关键字。<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span><span class="comment">/**/</span>hw[]=&#123;<span class="number">0x48</span>,<span class="number">0x65</span>,<span class="number">0x6c</span>,<span class="number">0x6c</span>,<span class="number">0x6f</span>,<span class="number">0x2c</span>,<span class="number">0x20</span>,<span class="number">0x57</span>,<span class="number">0x6f</span>,<span class="number">0x72</span>,<span class="number">0x6c</span>,<span class="number">0x64</span>,<span class="number">0x21</span>,<span class="number">0x00</span>&#125;;</span><br><span class="line"><span class="number">2</span> <span class="keyword">extern</span><span class="comment">/**/</span><span class="keyword">int</span><span class="comment">/**/</span><span class="built_in">puts</span>(<span class="keyword">const</span><span class="comment">/**/</span><span class="keyword">char</span>*__s);<span class="keyword">int</span><span class="comment">/**/</span>main()&#123;<span class="built_in">puts</span>(hw);<span class="keyword">return</span>(<span class="number">0</span>);&#125;</span><br></pre></td></tr></table></figure></p><h2 id="5-不使用括号-lt-gt-输出Hello-World"><a href="#5-不使用括号-lt-gt-输出Hello-World" class="headerlink" title="5. 不使用括号( {}[]()&lt;&gt; )输出Hello, World!"></a>5. 不使用括号( {}[]()&lt;&gt; )输出Hello, World!</h2><p>其实这个题目的解决办法就在之前的内联汇编的代码中，不过我在Linux64位测试的时候直接用上面的汇编代码可能会出现<code>segmentation fault</code>以及print的字符串地址不对的问题。所以我进行了改进。<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">asm</span>(<span class="string">"movl $1, %eax"</span>);</span><br><span class="line">      <span class="keyword">asm</span>(<span class="string">"movl $1, %ebx"</span>);</span><br><span class="line">      <span class="keyword">asm</span>(<span class="string">"leal 16(%eip), %esi"</span>);</span><br><span class="line">      <span class="keyword">asm</span>(<span class="string">"movl $13, %edx"</span>);</span><br><span class="line">      <span class="keyword">asm</span>(<span class="string">"syscall"</span>);</span><br><span class="line">      <span class="keyword">asm</span>(<span class="string">"movl $60,%eax"</span>);</span><br><span class="line">      <span class="keyword">asm</span>(<span class="string">"xorl %ebx,%ebx"</span>);</span><br><span class="line">      <span class="keyword">asm</span>(<span class="string">"syscall"</span>);</span><br><span class="line">      <span class="keyword">asm</span>(<span class="string">"message: .ascii \"Hello World!\\0\""</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>把上面的代码编译之后用gdb进行反汇编，然后选择查看内存，可以选择16进制或者10进制查看，然后将main中的内容转换为ShellCode就行了。其实说难并不难，但是有些弯路需要自己搞清楚。<br>下面提供两个版本：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> main = <span class="number">0x55</span>, main1 = <span class="number">0x48</span>, main2 = <span class="number">0x89</span>, main3 = <span class="number">0xe5</span>, main4 = <span class="number">0xb8</span>,</span><br><span class="line">           main5 = <span class="number">0x01</span>, main6 = <span class="number">0x00</span>, main7 = <span class="number">0x00</span>, main8 = <span class="number">0x00</span>, main9 = <span class="number">0xbb</span>,</span><br><span class="line">           main10 = <span class="number">0x01</span>, main11 = <span class="number">0x00</span>, main12 = <span class="number">0x00</span>, main13 = <span class="number">0x00</span>,</span><br><span class="line">           main14 = <span class="number">0x67</span>, main15 = <span class="number">0x8d</span>, main16 = <span class="number">0x35</span>, main17 = <span class="number">0x10</span>,</span><br><span class="line">           main18 = <span class="number">0x00</span>, main19 = <span class="number">0x00</span>, main20 = <span class="number">0x00</span>, main21 = <span class="number">0xba</span>,</span><br><span class="line">           main22 = <span class="number">0x0d</span>, main23 = <span class="number">0x00</span>, main24 = <span class="number">0x00</span>, main25 = <span class="number">0x00</span>,</span><br><span class="line">           main26 = <span class="number">0x0f</span>, main27 = <span class="number">0x05</span>, main28 = <span class="number">0xb8</span>, main29 = <span class="number">0x3c</span>,</span><br><span class="line">           main30 = <span class="number">0x00</span>, main31 = <span class="number">0x00</span>, main32 = <span class="number">0x00</span>, main33 = <span class="number">0x31</span>,</span><br><span class="line">           main34 = <span class="number">0xdb</span>, main35 = <span class="number">0x0f</span>, main36 = <span class="number">0x05</span>, main37 = <span class="number">0x48</span>,</span><br><span class="line">           main38 = <span class="number">0x65</span>, main39 = <span class="number">0x6c</span>, main40 = <span class="number">0x6c</span>, main41 = <span class="number">0x6f</span>,</span><br><span class="line">           main42 = <span class="number">0x20</span>, main43 = <span class="number">0x57</span>, main44 = <span class="number">0x6f</span>, main45 = <span class="number">0x72</span>,</span><br><span class="line">           main46 = <span class="number">0x6c</span>, main47 = <span class="number">0x64</span>, main48 = <span class="number">0x21</span>, main49 = <span class="number">0x0a</span>,</span><br><span class="line">           main50 = <span class="number">0x5d</span>;</span><br></pre></td></tr></table></figure></p><p>16进制使用<code>const char</code>的版本，注意用const让代码在<code>.rodata</code>段中，防止0x00被优化没了（我就被坑了好久）。<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> main = <span class="number">-443987883</span>, main1 = <span class="number">440</span>, main2 = <span class="number">113408</span>, main3 = <span class="number">-1922629632</span>,</span><br><span class="line">          main4 = <span class="number">4149</span>, main5 = <span class="number">899584</span>, main6 = <span class="number">84869120</span>, main7 = <span class="number">15544</span>,</span><br><span class="line">          main8 = <span class="number">266023168</span>, main9 = <span class="number">1818576901</span>, main10 = <span class="number">1461743468</span>,</span><br><span class="line">          main11 = <span class="number">1684828783</span>, main12 = <span class="number">-1017312735</span>;</span><br></pre></td></tr></table></figure></p><p>用<code>int</code>的版本。<br>但是我觉得这个东西肯定是跟架构有关系，很难写出平台无关代码了。<br>所以标明一下我的测试环境:<code>Debian 64位</code><br>还可以看一下这篇博客<sup><a href="#fn_1" id="reffn_1">1</a></sup></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这个题目真的非常有意思，虽然有好多东西算是奇技淫巧吧，不过确实能够学到底层的很多东西。</p><blockquote id="fn_1"><sup>1</sup>. <a href="https://jroweboy.github.io/c/asm/2015/01/26/when-is-main-not-a-function.html?utm_source=com.todoist&amp;utm_medium=social" target="_blank" rel="noopener">https://jroweboy.github.io/c/asm/2015/01/26/when-is-main-not-a-function.html?utm_source=com.todoist&amp;utm_medium=social</a><a href="#reffn_1" title="Jump back to footnote [1] in the text."> &#8617;</a></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近，工程组的学长建议我们都去做一下凝聚的题目，开阔开阔眼界。虽然我对安全方向不是非常感冒，但是有一道汇编与底层相关的题目给我留下了很深的印象。
    
    </summary>
    
      <category term="Blog" scheme="http://walsvid.github.io/categories/Blog/"/>
    
    
      <category term="C" scheme="http://walsvid.github.io/tags/C/"/>
    
      <category term="汇编" scheme="http://walsvid.github.io/tags/%E6%B1%87%E7%BC%96/"/>
    
  </entry>
  
</feed>
